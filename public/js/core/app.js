/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/core/app.js":
/*!**********************************!*\
  !*** ./resources/js/core/app.js ***!
  \**********************************/
/***/ (() => {

eval(";\n(function (window, document, $) {\n  \"use strict\";\n\n  var $html = $(\"html\");\n  var $body = $(\"body\");\n  var $danger = \"#FF5B5C\";\n  var $primary = \"#5A8DEE\";\n  var $primary_lighten = \"#e7edf3\";\n  var $warning = \"#FDAC41\";\n  var $textcolor = \"#304156\";\n  function scrollTopFn() {\n    var $scrollTop = $(window).scrollTop();\n    if ($scrollTop > 60) {\n      $(\"body\").addClass(\"navbar-scrolled\");\n    } else {\n      $(\"body\").removeClass(\"navbar-scrolled\");\n    }\n    if ($scrollTop > 20) {\n      $(\"body\").addClass(\"page-scrolled\");\n    } else {\n      $(\"body\").removeClass(\"page-scrolled\");\n    }\n  }\n  $(window).scroll(function () {\n    scrollTopFn();\n  });\n  $(window).on(\"load\", function () {\n    var rtl;\n    var compactMenu = false; // Set it to true, if you want default menu to be compact\n\n    if ($body.hasClass(\"menu-collapsed\")) {\n      compactMenu = true;\n    }\n    if ($(\"html\").data(\"textdirection\") == \"rtl\") {\n      rtl = true;\n    }\n    setTimeout(function () {\n      $html.removeClass(\"loading\").addClass(\"loaded\");\n    }, 1200);\n    $.app.menu.init(compactMenu);\n\n    // Navigation configurations\n    var config = {\n      speed: 300 // set speed to expand / collpase menu\n    };\n\n    if ($.app.nav.initialized === false) {\n      $.app.nav.init(config);\n    }\n    Unison.on(\"change\", function (bp) {\n      $.app.menu.change(compactMenu);\n    });\n\n    // Tooltip Initialization\n    $('[data-toggle=\"tooltip\"]').tooltip({\n      container: \"body\"\n    });\n\n    // Tooltip For Horizontal Layout - Bookmark Icons\n    /* tooltip-horizontal-bookmark - Add Custom Class */\n    $(\".tooltip-horizontal-bookmark\").tooltip({\n      customClass: \"tooltip-horizontal-bookmark\"\n    });\n\n    // Collapsible Card\n    $('a[data-action=\"collapse\"]').on(\"click\", function (e) {\n      e.preventDefault();\n      $(this).closest(\".card\").children(\".card-content\").collapse(\"toggle\");\n      // Adding bottom padding on card collapse\n      $(this).closest(\".card\").children(\".card-header\").css(\"padding-bottom\", \"1.5rem\");\n      $(this).closest(\".card\").find('[data-action=\"collapse\"]').toggleClass(\"rotate\");\n    });\n\n    // Toggle fullscreen\n    $('a[data-action=\"expand\"]').on(\"click\", function (e) {\n      e.preventDefault();\n      $(this).closest(\".card\").find('[data-action=\"expand\"] i').toggleClass(\"bx-fullscreen bx-exit-fullscreen\");\n      $(this).closest(\".card\").toggleClass(\"card-fullscreen\");\n    });\n\n    //  Notifications & messages scrollable\n    $(\".scrollable-container\").each(function () {\n      var scrollable_container = new PerfectScrollbar($(this)[0], {\n        wheelPropagation: false\n      });\n    });\n\n    // Add sidebar group active class to active menu\n    $(\".main-menu-content\").find(\"li.active\").parents(\"li\").addClass(\"sidebar-group-active\");\n\n    // Add open class to parent list item if subitem is active except compact menu\n    var menuType = $body.data(\"menu\");\n    if (menuType != \"horizontal-menu\" && compactMenu === false) {\n      $(\".main-menu-content\").find(\"li.active\").parents(\"li\").addClass(\"open\");\n    }\n    if (menuType == \"horizontal-menu\") {\n      $(\".main-menu-content\").find(\"li.active\").parents(\"li:not(.nav-item)\").addClass(\"open\");\n      $(\".main-menu-content\").find(\"li.active\").parents(\"li\").addClass(\"active\");\n    }\n\n    //card heading actions buttons small screen support\n    $(\".heading-elements-toggle\").on(\"click\", function () {\n      $(this).next(\".heading-elements\").toggleClass(\"visible\");\n    });\n\n    //  Dynamic height for the chartjs div for the chart animations to work\n    var chartjsDiv = $(\".chartjs\"),\n      canvasHeight = chartjsDiv.children(\"canvas\").attr(\"height\");\n    chartjsDiv.css(\"height\", canvasHeight);\n    if ($body.hasClass(\"boxed-layout\")) {\n      if ($body.hasClass(\"vertical-overlay-menu\")) {\n        var menuWidth = $(\".main-menu\").width();\n        var contentPosition = $(\".app-content\").position().left;\n        var menuPositionAdjust = contentPosition - menuWidth;\n        if ($body.hasClass(\"menu-flipped\")) {\n          $(\".main-menu\").css(\"right\", menuPositionAdjust + \"px\");\n        } else {\n          $(\".main-menu\").css(\"left\", menuPositionAdjust + \"px\");\n        }\n      }\n    }\n\n    //Custom File Input\n    $(\".custom-file input\").change(function (e) {\n      $(this).next(\".custom-file-label\").html(e.target.files[0].name);\n    });\n\n    /* Text Area Counter Set Start */\n\n    $(\".char-textarea\").on(\"keyup\", function (event) {\n      checkTextAreaMaxLength(this, event);\n      // to later change text color in dark layout\n      $(this).addClass(\"active\");\n    });\n\n    /*\r\n    Checks the MaxLength of the Textarea\r\n    -----------------------------------------------------\r\n    @prerequisite:  textBox = textarea dom element\r\n            e = textarea event\r\n                    length = Max length of characters\r\n    */\n    function checkTextAreaMaxLength(textBox, e) {\n      var maxLength = parseInt($(textBox).data(\"length\"));\n      if (!checkSpecialKeys(e)) {\n        if (textBox.value.length < maxLength - 1) textBox.value = textBox.value.substring(0, maxLength);\n      }\n      $(\".char-count\").html(textBox.value.length);\n      if (textBox.value.length > maxLength) {\n        $(\".counter-value\").css(\"background-color\", $danger);\n        $(\".char-textarea\").css(\"color\", $danger);\n        // to change text color after limit is maxedout out\n        $(\".char-textarea\").addClass(\"max-limit\");\n      } else {\n        $(\".counter-value\").css(\"background-color\", $primary);\n        $(\".char-textarea\").css(\"color\", $textcolor);\n        $(\".char-textarea\").removeClass(\"max-limit\");\n      }\n      return true;\n    }\n    /*\r\n    Checks if the keyCode pressed is inside special chars\r\n    -------------------------------------------------------\r\n    @prerequisite:  e = e.keyCode object for the key pressed\r\n    */\n    function checkSpecialKeys(e) {\n      if (e.keyCode != 8 && e.keyCode != 46 && e.keyCode != 37 && e.keyCode != 38 && e.keyCode != 39 && e.keyCode != 40) return false;else return true;\n    }\n    $(\".content-overlay\").on(\"click\", function () {\n      $(\".search-list\").removeClass(\"show\");\n      $(\".app-content\").removeClass(\"show-overlay\");\n      $(\".bookmark-wrapper .bookmark-input\").removeClass(\"show\");\n    });\n\n    // To show shadow in main menu when menu scrolls\n    var container = document.getElementsByClassName(\"main-menu-content\");\n    if (container.length > 0) {\n      container[0].addEventListener(\"ps-scroll-y\", function () {\n        if ($(this).find(\".ps__thumb-y\").position().top > 0) {\n          $(\".shadow-bottom\").css(\"display\", \"block\");\n        } else {\n          $(\".shadow-bottom\").css(\"display\", \"none\");\n        }\n      });\n    }\n  });\n\n  // Hide overlay menu on content overlay click on small screens\n  $(document).on(\"click\", \".sidenav-overlay\", function (e) {\n    // Hide menu\n    $.app.menu.hide();\n    return false;\n  });\n  $(document).on(\"click\", \".menu-toggle, .modern-nav-toggle\", function (e) {\n    e.preventDefault();\n\n    // Toggle menu\n    $.app.menu.toggle();\n    setTimeout(function () {\n      $(window).trigger(\"resize\");\n    }, 200);\n    if ($(\"#collapsed-sidebar\").length > 0) {\n      setTimeout(function () {\n        if ($body.hasClass(\"menu-expanded\") || $body.hasClass(\"menu-open\")) {\n          $(\"#collapsed-sidebar\").prop(\"checked\", false);\n        } else {\n          $(\"#collapsed-sidebar\").prop(\"checked\", true);\n        }\n      }, 1000);\n    }\n\n    // Hides dropdown on click of menu toggle\n    // $('[data-toggle=\"dropdown\"]').dropdown('hide');\n\n    // Hides collapse dropdown on click of menu toggle\n    if ($(\".vertical-overlay-menu .navbar-with-menu .navbar-container .navbar-collapse\").hasClass(\"show\")) {\n      $(\".vertical-overlay-menu .navbar-with-menu .navbar-container .navbar-collapse\").removeClass(\"show\");\n    }\n    return false;\n  });\n\n  // Add Children Class\n  $(\".navigation\").find(\"li\").has(\"ul\").addClass(\"has-sub\");\n\n  // Page full screen\n  $(\".nav-link-expand\").on(\"click\", function (e) {\n    if (typeof screenfull != \"undefined\") {\n      if (screenfull.enabled) {\n        screenfull.toggle();\n      }\n    }\n  });\n  if (typeof screenfull != \"undefined\") {\n    if (screenfull.enabled) {\n      $(document).on(screenfull.raw.fullscreenchange, function () {\n        if (screenfull.isFullscreen) {\n          $(\".nav-link-expand\").find(\"i\").toggleClass(\"bx-exit-fullscreen bx-fullscreen\");\n          $(\"html\").addClass(\"full-screen\");\n        } else {\n          $(\".nav-link-expand\").find(\"i\").toggleClass(\"bx-fullscreen bx-exit-fullscreen\");\n          $(\"html\").removeClass(\"full-screen\");\n        }\n      });\n    }\n  }\n  $(document).ready(function () {\n    /**********************************\r\n     *   Form Wizard Step Icon\r\n     **********************************/\n    $(\".step-icon\").each(function () {\n      var $this = $(this);\n      if ($this.siblings(\"span.step\").length > 0) {\n        $this.siblings(\"span.step\").empty();\n        $(this).appendTo($(this).siblings(\"span.step\"));\n      }\n    });\n  });\n\n  // Update manual scroller when window is resized\n  $(window).resize(function () {\n    $.app.menu.manualScroller.updateHeight();\n    // To show shadow in main menu when menu scrolls\n    var container = document.getElementsByClassName(\"main-menu-content\");\n    if (container.length > 0) {\n      container[0].addEventListener(\"ps-scroll-y\", function () {\n        if ($(this).find(\".ps__thumb-y\").position().top > 0) {\n          $(\".shadow-bottom\").css(\"display\", \"block\");\n        } else {\n          $(\".shadow-bottom\").css(\"display\", \"none\");\n        }\n      });\n    }\n  });\n  $(\"#sidebar-page-navigation\").on(\"click\", \"a.nav-link\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var $this = $(this),\n      href = $this.attr(\"href\");\n    var offset = $(href).offset();\n    var scrollto = offset.top - 80; // minus fixed header height\n    $(\"html, body\").animate({\n      scrollTop: scrollto\n    }, 0);\n    setTimeout(function () {\n      $this.parent(\".nav-item\").siblings(\".nav-item\").children(\".nav-link\").removeClass(\"active\");\n      $this.addClass(\"active\");\n    }, 100);\n  });\n\n  /********************* Bookmark & Search ***********************/\n  // This variable is used for mouseenter and mouseleave events of search list\n  var $filename = $(\".search-input input\").data(\"search\");\n\n  // Bookmark icon click\n  $(\".bookmark-wrapper .bookmark-star\").on(\"click\", function (e) {\n    e.stopPropagation();\n    $(\".bookmark-wrapper .bookmark-input\").toggleClass(\"show\");\n    $(\".bookmark-wrapper .bookmark-input input\").val(\"\");\n    $(\".bookmark-wrapper .bookmark-input input\").blur();\n    $(\".bookmark-wrapper .bookmark-input input\").focus();\n    $(\".bookmark-wrapper .search-list\").addClass(\"show\");\n    var arrList = $(\"ul.nav.navbar-nav.bookmark-icons li\"),\n      $arrList = \"\",\n      $activeItemClass = \"\";\n    $(\"ul.search-list li\").remove();\n    for (var i = 0; i < arrList.length; i++) {\n      if (i === 0) {\n        $activeItemClass = \"current_item\";\n      } else {\n        $activeItemClass = \"\";\n      }\n      $arrList += '<li class=\"auto-suggestion d-flex align-items-center justify-content-between cursor-pointer ' + $activeItemClass + '\">' + '<a class=\"d-flex align-items-center justify-content-between w-100\" href=' + arrList[i].firstChild.href + \">\" + '<div class=\"d-flex justify-content-start\">' + '<span class=\"mr-75 ' + arrList[i].firstChild.firstChild.className + '\"  data-icon=\"' + arrList[i].firstChild.firstChild.className + '\"></span>' + \"<span>\" + arrList[i].firstChild.dataset.originalTitle + \"</span>\" + \"</div>\" + '<span class=\"float-right bookmark-icon bx bx-star warning\"></span>' + \"</a>\" + \"</li>\";\n    }\n    $(\"ul.search-list\").append($arrList);\n  });\n\n  // Navigation Search area Open\n  $(\".nav-link-search\").on(\"click\", function () {\n    var $this = $(this);\n    var searchInput = $(this).parent(\".nav-search\").find(\".search-input\");\n    searchInput.addClass(\"open\");\n    $(\".search-input input\").focus();\n    $(\".search-input .search-list li\").remove();\n    $(\".search-input .search-list\").addClass(\"show\");\n    $(\".bookmark-wrapper .bookmark-input\").removeClass(\"show\");\n  });\n\n  // Navigation Search area Close\n  $(\".search-input-close i\").on(\"click\", function () {\n    var $this = $(this),\n      searchInput = $(this).closest(\".search-input\");\n    if (searchInput.hasClass(\"open\")) {\n      searchInput.removeClass(\"open\");\n      $(\".search-input input\").val(\"\");\n      $(\".search-input input\").blur();\n      $(\".search-input .search-list\").removeClass(\"show\");\n      if ($(\".app-content\").hasClass(\"show-overlay\")) {\n        $(\".app-content\").removeClass(\"show-overlay\");\n      }\n    }\n  });\n\n  // Navigation Search area Close on click of app-content\n  $(\".app-content\").on(\"click\", function () {\n    var $this = $(\".search-input-close\"),\n      searchInput = $($this).parent(\".search-input\");\n    if (searchInput.hasClass(\"open\")) {\n      searchInput.removeClass(\"open\");\n    }\n  });\n})(window, document, jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/core/app.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/core/app.js"]();
/******/ 	
/******/ })()
;